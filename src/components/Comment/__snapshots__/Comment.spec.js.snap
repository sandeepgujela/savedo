// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Comment /> Should render comment component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Comment
    data={
      Object {
        "body": "123 1233",
        "created_at": "xx.yy.zzzz",
        "user": Object {
          "avatar_url": "some_url",
          "login": "savedo",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="user-image"
        >
          <img
            alt="user avatar"
            src="some_url"
          />
        </div>,
        <div
          className="comment-data"
        >
          <div
            className="user-name"
          >
            <b>
              savedo
               
            </b>
            commented On 
            just now
          </div>
          <div
            className="body"
          >
            <ReactMarkdown
              astPlugins={Array []}
              escapeHtml={true}
              plugins={Array []}
              rawSourcePos={false}
              renderers={Object {}}
              skipHtml={false}
              source="123 1233"
              sourcePos={false}
              transformLinkUri={[Function]}
            />
          </div>
        </div>,
      ],
      "className": "comment-wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="user avatar"
            src="some_url"
          />,
          "className": "user-image",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "user avatar",
            "src": "some_url",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="user-name"
            >
              <b>
                savedo
                 
              </b>
              commented On 
              just now
            </div>,
            <div
              className="body"
            >
              <ReactMarkdown
                astPlugins={Array []}
                escapeHtml={true}
                plugins={Array []}
                rawSourcePos={false}
                renderers={Object {}}
                skipHtml={false}
                source="123 1233"
                sourcePos={false}
                transformLinkUri={[Function]}
              />
            </div>,
          ],
          "className": "comment-data",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <b>
                  savedo
                   
                </b>,
                "commented On ",
                "just now",
              ],
              "className": "user-name",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "savedo",
                    " ",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "savedo",
                  " ",
                ],
                "type": "b",
              },
              "commented On ",
              "just now",
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ReactMarkdown
                astPlugins={Array []}
                escapeHtml={true}
                plugins={Array []}
                rawSourcePos={false}
                renderers={Object {}}
                skipHtml={false}
                source="123 1233"
                sourcePos={false}
                transformLinkUri={[Function]}
              />,
              "className": "body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "astPlugins": Array [],
                "escapeHtml": true,
                "plugins": Array [],
                "rawSourcePos": false,
                "renderers": Object {},
                "skipHtml": false,
                "source": "123 1233",
                "sourcePos": false,
                "transformLinkUri": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="user-image"
          >
            <img
              alt="user avatar"
              src="some_url"
            />
          </div>,
          <div
            className="comment-data"
          >
            <div
              className="user-name"
            >
              <b>
                savedo
                 
              </b>
              commented On 
              just now
            </div>
            <div
              className="body"
            >
              <ReactMarkdown
                astPlugins={Array []}
                escapeHtml={true}
                plugins={Array []}
                rawSourcePos={false}
                renderers={Object {}}
                skipHtml={false}
                source="123 1233"
                sourcePos={false}
                transformLinkUri={[Function]}
              />
            </div>
          </div>,
        ],
        "className": "comment-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="user avatar"
              src="some_url"
            />,
            "className": "user-image",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "user avatar",
              "src": "some_url",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="user-name"
              >
                <b>
                  savedo
                   
                </b>
                commented On 
                just now
              </div>,
              <div
                className="body"
              >
                <ReactMarkdown
                  astPlugins={Array []}
                  escapeHtml={true}
                  plugins={Array []}
                  rawSourcePos={false}
                  renderers={Object {}}
                  skipHtml={false}
                  source="123 1233"
                  sourcePos={false}
                  transformLinkUri={[Function]}
                />
              </div>,
            ],
            "className": "comment-data",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <b>
                    savedo
                     
                  </b>,
                  "commented On ",
                  "just now",
                ],
                "className": "user-name",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "savedo",
                      " ",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "savedo",
                    " ",
                  ],
                  "type": "b",
                },
                "commented On ",
                "just now",
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ReactMarkdown
                  astPlugins={Array []}
                  escapeHtml={true}
                  plugins={Array []}
                  rawSourcePos={false}
                  renderers={Object {}}
                  skipHtml={false}
                  source="123 1233"
                  sourcePos={false}
                  transformLinkUri={[Function]}
                />,
                "className": "body",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "astPlugins": Array [],
                  "escapeHtml": true,
                  "plugins": Array [],
                  "rawSourcePos": false,
                  "renderers": Object {},
                  "skipHtml": false,
                  "source": "123 1233",
                  "sourcePos": false,
                  "transformLinkUri": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
