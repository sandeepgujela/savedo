{"version":3,"sources":["serviceWorker.js","util/fetch.js","state/issues/reducer.js","state/issues/actions.js","state/details/reducer.js","state/details/actions.js","state/reducer.js","state/store.js","util/helpers.js","components/Issue/Issue.js","components/Issues/Issues.js","components/NotFound/NotFound.js","components/Comment/Comment.js","components/IssueDetail/IssueDetail.js","components/App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","getContentType","response","headers","get","isJson","contentType","indexOf","fetchFromGithub","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","params","url","wrap","_context","prev","next","fetch","sent","status","abrupt","Promise","reject","json","text","stop","this","_x","apply","arguments","defaultState","fetching","data","fetchError","reducer","issues","issueId","state","length","undefined","action","type","page","objectSpread","selected","find","issue","number","details_reducer","rootReducer","history","combineReducers","issuesReducer","details","detailsReducer","router","connectRouter","createBrowserHistory","basename","process","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewareEnhancer","applyMiddleware","routerMiddleware","thunk","store","createStore","timeAgoInstance","timeAgo","meaningFullTime","dateTime","format","Issue","labels","map","label","index","style","backgroundColor","color","react_default","createElement","key","className","name","_this$props$issue","props","title","created_at","user","comments","index_esm","icon","IssueOpened","size","verticalAlign","getLabels","login","Comment","Component","Issues","dispatch","then","catch","_this","react_router_dom","id","to","concat","onClick","issueSelected","bind","components_Issue_Issue","selectIssue","getPageTitle","getIssuesList","Repo","IssuesConnected","connect","_state$issues","NotFound","_this$props$prop","prop","_this$props$data","_this$props$data$user","avatar_url","body","src","alt","react_markdown_default","source","IssueDetail","_this$props","comments_url","_this$props2","getTitle","getSubtitle","components_Comment_Comment","comment","react_router","IssueDetailConnected","App","es","lib","exact","path","component","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72d5f2ca.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\n\nconst getContentType = response => response.headers.get('content-type');\n\nconst isJson = contentType => contentType.indexOf('application/json') > -1;\n\nexport const fetchFromGithub = async params => {\n  const { url } = params;\n  const response = await fetch(url);\n  if (response.status === 401) {\n    return Promise.reject('Not authorized');\n  }\n  const contentType = getContentType(response);\n  if (isJson(contentType)) {\n    return response.json();\n  }\n  return response.text();\n};\n","import {\n  SEARCH_REQUEST,\n  SEARCH_REQUEST_SUCCESS,\n  SEARCH_REQUEST_FAILED,\n  ISSUE_SELECTED,\n} from './actions';\n\nconst defaultState = {\n  fetching: false,\n  data: null,\n  fetchError: false,\n};\n\nconst selectedIssueDetails = (issues, issueId) =>\n  issues.find(issue => issue.number === issueId);\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SEARCH_REQUEST:\n      const { page } = action;\n      return { ...state, page, fetching: true, data: null, fetchError: false };\n    case SEARCH_REQUEST_SUCCESS:\n      const { data } = action;\n      return { ...state, data, fetching: false };\n    case SEARCH_REQUEST_FAILED:\n      return { ...state, fetching: false, fetchError: true };\n    case ISSUE_SELECTED:\n      return {\n        ...state,\n        selected: selectedIssueDetails(state.data, action.issueId),\n      };\n    default:\n      return state;\n  }\n};\n","import { fetchFromGithub } from '../../util/fetch';\n\nexport const SEARCH_REQUEST = 'SEARCH_REQUEST';\nexport const SEARCH_REQUEST_SUCCESS = 'SEARCH_REQUEST_SUCCESS';\nexport const SEARCH_REQUEST_FAILED = 'SEARCH_REQUEST_FAILED';\nexport const ISSUE_SELECTED = 'ISSUE_SELECTED';\n\nexport const selectIssue = issueId => dispatch => {\n  dispatch({\n    type: ISSUE_SELECTED,\n    issueId,\n  });\n};\n\nexport const searchRequest = params => dispatch => {\n  const { url } = params;\n  dispatch({\n    type: SEARCH_REQUEST,\n  });\n  return fetchFromGithub({\n    url,\n  })\n    .then(data => {\n      dispatch({ type: SEARCH_REQUEST_SUCCESS, data });\n    })\n    .catch(() => {\n      dispatch({ type: SEARCH_REQUEST_FAILED });\n    });\n};\n","import {\n  DETAILS_REQUEST,\n  DETAILS_REQUEST_FAILED,\n  DETAILS_REQUEST_SUCCESS,\n} from './actions';\n\nconst defaultState = {\n  fetching: false,\n  data: null,\n  fetchError: false,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case DETAILS_REQUEST:\n      const { page } = action;\n      return { ...state, page, fetching: true, data: null, fetchError: false };\n    case DETAILS_REQUEST_SUCCESS:\n      const { data } = action;\n      return { ...state, data, fetching: false };\n    case DETAILS_REQUEST_FAILED:\n      return { ...state, fetching: false, fetchError: true };\n    default:\n      return state;\n  }\n};\n","import { fetchFromGithub } from '../../util/fetch';\n\nexport const DETAILS_REQUEST = 'DETAILS_REQUEST';\nexport const DETAILS_REQUEST_SUCCESS = 'DETAILS_REQUEST_SUCCESS';\nexport const DETAILS_REQUEST_FAILED = 'DETAILS_REQUEST_FAILED';\n\nexport const detailsRequest = params => dispatch => {\n  const { url } = params;\n  dispatch({\n    type: DETAILS_REQUEST,\n  });\n  return fetchFromGithub({\n    url,\n  })\n    .then(data => {\n      dispatch({ type: DETAILS_REQUEST_SUCCESS, data });\n    })\n    .catch(() => {\n      dispatch({ type: DETAILS_REQUEST_FAILED });\n    });\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport issuesReducer from './issues/reducer';\nimport detailsReducer from './details/reducer';\n\nconst rootReducer = history =>\n  combineReducers({\n    issues: issuesReducer,\n    details: detailsReducer,\n    router: connectRouter(history),\n  });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer';\n\n// https://medium.com/@Dragonza/react-router-problem-with-gh-pages-c93a5e243819\n// Passing basename prop to the history for gh-pages deployment\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewareEnhancer = applyMiddleware(routerMiddleware(history), thunk);\n\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer(history),\n  initialState,\n  composeEnhancers(middlewareEnhancer),\n);\n\nexport { store, history };\n","import timeAgo from 'timeago.js';\n\nconst timeAgoInstance = new timeAgo();\n\nexport const meaningFullTime = dateTime => timeAgoInstance.format(dateTime);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Issue.css';\nimport Octicon, { IssueOpened, Comment } from '@githubprimer/octicons-react';\nimport { meaningFullTime } from '../../util/helpers';\nclass Issue extends Component {\n  getLabels(labels) {\n    if (!labels) return;\n    return labels.map((label, index) => {\n      const style = { backgroundColor: '#' + label.color };\n      return (\n        <span key={'label-' + index} className=\"label-component\" style={style}>\n          {label.name}\n        </span>\n      );\n    });\n  }\n  render() {\n    const {\n      number,\n      labels,\n      title,\n      created_at,\n      user,\n      comments,\n    } = this.props.issue;\n    return (\n      <li className=\"issue-container\">\n        <div className=\"icon-wrapper\">\n          <Octicon icon={IssueOpened} size=\"small\" verticalAlign=\"middle\" />\n        </div>\n\n        <div className=\"title-wrapper\">\n          <div className=\"title\">\n            {title}\n            {this.getLabels(labels)}\n          </div>\n\n          <div className=\"meta-wrapper\">\n            <div className=\"issue-number\">#{number} </div>\n            <div className=\"ml-5\">Opened on {meaningFullTime(created_at)}</div>\n            <div className=\"ml-5\">By {user.login} </div>\n          </div>\n        </div>\n\n        <div className=\"comments\">\n          {comments > 0 ? (\n            <span>\n              <Octicon icon={Comment} size=\"small\" verticalAlign=\"middle\" />{' '}\n              {comments}\n            </span>\n          ) : null}\n        </div>\n      </li>\n    );\n  }\n}\n\nIssue.propTypes = {\n  issue: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    created_at: PropTypes.string.isRequired,\n    html_url: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    labels: PropTypes.arrayOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        name: PropTypes.string,\n      }),\n    ).isRequired,\n    comments: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { searchRequest, selectIssue } from '../../state/issues/actions';\nimport './Issues.css';\nimport Octicon, { Repo } from '@githubprimer/octicons-react';\n\nimport Issue from '../Issue/Issue';\n\nconst issuesUrl = 'https://api.github.com/repos/facebook/react/issues';\n\nclass Issues extends Component {\n  //https://github.com/ReactTraining/history/pull/570 :: multiple clicks on Link causes browser history to explode\n  static getPageTitle() {\n    return (\n      <Link className=\"mt-20 home\" to={'/'}>\n        <span>\n          <Octicon icon={Repo} size=\"small\" verticalAlign=\"middle\" />\n        </span>\n        <span className=\" ml-5 project-title color-primary\">\n          facebook<b>react</b>\n        </span>\n      </Link>\n    );\n  }\n\n  componentDidMount() {\n    this.props.dispatch(searchRequest({ url: issuesUrl }));\n  }\n\n  getIssuesList(data) {\n    return data.map(issue => (\n      <Link\n        className=\"link\"\n        key={issue.id}\n        to={`/details/${issue.number}`}\n        onClick={this.issueSelected.bind(this, issue.number)}\n      >\n        <Issue issue={issue} />\n      </Link>\n    ));\n  }\n\n  issueSelected(issueId) {\n    this.props.dispatch(selectIssue(issueId));\n  }\n\n  render() {\n    const { data } = this.props;\n    return (\n      <div>\n        {data && data.length > 0 && (\n          <div className=\"issues\">\n            {Issues.getPageTitle()}\n            <ul className=\"issues-list\">{this.getIssuesList(data)}</ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { fetching, data } = state.issues;\n  return {\n    fetching,\n    data,\n  };\n};\n\nconst IssuesConnected = connect(mapStateToProps)(Issues);\n\nexport { Issues, IssuesConnected };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NotFound.css';\n\nclass NotFound extends Component {\n  render() {\n    const { prop = 'Not Found' } = this.props;\n    return (\n      <div className=\"NotFound\">\n        <span>{prop}</span>\n      </div>\n    );\n  }\n}\n\nNotFound.propTypes = {\n  prop: PropTypes.string.isRequired,\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Comment.css';\nimport ReactMarkdown from 'react-markdown';\nimport { meaningFullTime } from '../../util/helpers';\n\nclass Comment extends Component {\n  render() {\n    const {\n      user: { avatar_url, login },\n      created_at,\n      body,\n    } = this.props.data;\n    return (\n      <div className=\"comment-wrapper\">\n        <div className=\"user-image\">\n          {avatar_url && <img src={avatar_url} alt=\"user avatar\" />}\n        </div>\n\n        <div className=\"comment-data\">\n          <div className=\"user-name\">\n            <b>{login} </b>\n            commented On {meaningFullTime(created_at)}\n          </div>\n          <div className=\"body\">\n            <ReactMarkdown source={body} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nComment.propTypes = {\n  data: PropTypes.shape({\n    user: PropTypes.shape({\n      login: PropTypes.string.isRequired,\n      avatar_url: PropTypes.string.isRequired,\n    }).isRequired,\n    created_at: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { detailsRequest } from '../../state/details/actions';\nimport Comment from '../Comment/Comment';\nimport Octicon, { IssueOpened } from '@githubprimer/octicons-react';\nimport './IssueDetail.css';\nimport { Redirect } from 'react-router-dom';\nimport { Issues } from '../Issues/Issues';\nimport { meaningFullTime } from '../../util/helpers';\n\nclass IssueDetail extends Component {\n  componentDidMount() {\n    const { selected, dispatch } = this.props;\n    if (selected === undefined) {\n      return;\n    }\n    dispatch(detailsRequest({ url: selected.comments_url }));\n  }\n\n  static getTitle(selected) {\n    const { title, number } = selected;\n    return (\n      <div>\n        <span>\n          <h1 className=\"title\">\n            {title} <span className=\"color-light\">#{number}</span>\n          </h1>\n        </span>\n      </div>\n    );\n  }\n\n  static getSubtitle(selected) {\n    const {\n      user: { login },\n      created_at,\n      comments,\n    } = selected;\n    return (\n      <div className=\"status-container\">\n        <div className=\"status-label-open\">\n          <Octicon icon={IssueOpened} size=\"small\" verticalAlign=\"middle\" />{' '}\n          &nbsp;Open\n        </div>\n        <div className=\"ml-5 color-light\">\n          <b>{login}</b> opened this issue on {meaningFullTime(created_at)} .{' '}\n          {comments} Comments\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { selected, data } = this.props;\n    if (selected === undefined || !selected.number) {\n      return <Redirect to={'/'} />;\n    }\n    return (\n      <div className=\"issue-detail-container\">\n        {Issues.getPageTitle()}\n        {IssueDetail.getTitle(selected)}\n        {IssueDetail.getSubtitle(selected)}\n        <Comment data={selected} />\n        {data &&\n          data.length > 0 &&\n          data.map(comment => <Comment key={comment.id} data={comment} />)}\n      </div>\n    );\n  }\n}\n\nIssueDetail.propTypes = {\n  selected: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    created_at: PropTypes.string.isRequired,\n    html_url: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    labels: PropTypes.arrayOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        name: PropTypes.string,\n      }),\n    ).isRequired,\n    comments: PropTypes.number.isRequired,\n    user: PropTypes.shape({\n      login: PropTypes.string.isRequired,\n      avatar_url: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nconst mapsStateToProps = state => {\n  const { selected } = state.issues;\n  const { data } = state.details;\n  return {\n    selected,\n    data,\n  };\n};\n\nconst IssueDetailConnected = connect(mapsStateToProps)(IssueDetail);\n\nexport { IssueDetail, IssueDetailConnected };\n","import React, { Component } from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { store, history } from '../../state/store';\nimport { IssuesConnected } from '../Issues/Issues';\nimport NotFound from '../NotFound/NotFound';\nimport { IssueDetailConnected } from '../IssueDetail/IssueDetail';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route exact path=\"/\" component={IssuesConnected} />\n            <Route\n              exact\n              path=\"/details/:issueId(\\d+)\"\n              component={IssueDetailConnected}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App/App';\n\nReactDOM.render(<App prop={'Welcome'} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}